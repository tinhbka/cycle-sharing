//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 4 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: Language
      ///
      /// Key: language
      ///
      /// Locales: en
      var language: RswiftResources.StringResource { .init(key: "language", tableName: "Localizable", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: titleCancel
      ///
      /// Locales: en
      var titleCancel: RswiftResources.StringResource { .init(key: "titleCancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: titleDelete
      ///
      /// Locales: en
      var titleDelete: RswiftResources.StringResource { .init(key: "titleDelete", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: OK
      ///
      /// Key: titleOK
      ///
      /// Locales: en
      var titleOK: RswiftResources.StringResource { .init(key: "titleOK", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 8 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `appGreen`.
    var appGreen: RswiftResources.ColorResource { .init(name: "appGreen", path: [], bundle: bundle) }

    /// Color `appRed`.
    var appRed: RswiftResources.ColorResource { .init(name: "appRed", path: [], bundle: bundle) }

    /// Color `backgroundE5`.
    var backgroundE5: RswiftResources.ColorResource { .init(name: "backgroundE5", path: [], bundle: bundle) }

    /// Color `primary`.
    var primary: RswiftResources.ColorResource { .init(name: "primary", path: [], bundle: bundle) }

    /// Color `text21`.
    var text21: RswiftResources.ColorResource { .init(name: "text21", path: [], bundle: bundle) }

    /// Color `text7C7B`.
    var text7C7B: RswiftResources.ColorResource { .init(name: "text7C7B", path: [], bundle: bundle) }

    /// Color `textE5`.
    var textE5: RswiftResources.ColorResource { .init(name: "textE5", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 8 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `ic_china`.
    var ic_china: RswiftResources.ImageResource { .init(name: "ic_china", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_eng`.
    var ic_eng: RswiftResources.ImageResource { .init(name: "ic_eng", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_fra`.
    var ic_fra: RswiftResources.ImageResource { .init(name: "ic_fra", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_ger`.
    var ic_ger: RswiftResources.ImageResource { .init(name: "ic_ger", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_hindi`.
    var ic_hindi: RswiftResources.ImageResource { .init(name: "ic_hindi", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_indo`.
    var ic_indo: RswiftResources.ImageResource { .init(name: "ic_indo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_port`.
    var ic_port: RswiftResources.ImageResource { .init(name: "ic_port", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_spain`.
    var ic_spain: RswiftResources.ImageResource { .init(name: "ic_spain", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
            var uiSceneStoryboardFile: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneStoryboardFile") ?? "Main" }
          }
        }
      }
    }
  }

  /// This `_R.font` struct is generated, and contains static references to 20 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `Comfortaa-Bold`.
    var comfortaaBold: RswiftResources.FontResource { .init(name: "Comfortaa-Bold", bundle: bundle, filename: "comfortaa_bold.ttf") }

    /// Font `Comfortaa-Light`.
    var comfortaaLight: RswiftResources.FontResource { .init(name: "Comfortaa-Light", bundle: bundle, filename: "comfortaa_light.ttf") }

    /// Font `Comfortaa-Medium`.
    var comfortaaMedium: RswiftResources.FontResource { .init(name: "Comfortaa-Medium", bundle: bundle, filename: "comfortaa_medium.ttf") }

    /// Font `Comfortaa-Regular`.
    var comfortaaRegular: RswiftResources.FontResource { .init(name: "Comfortaa-Regular", bundle: bundle, filename: "comfortaa_regular.ttf") }

    /// Font `Comfortaa-SemiBold`.
    var comfortaaSemiBold: RswiftResources.FontResource { .init(name: "Comfortaa-SemiBold", bundle: bundle, filename: "comfortaa_semi_bold.ttf") }

    /// Font `HammersmithOne-Regular`.
    var hammersmithOneRegular: RswiftResources.FontResource { .init(name: "HammersmithOne-Regular", bundle: bundle, filename: "hammersmithone_regular.ttf") }

    /// Font `Mulish-Medium`.
    var mulishMedium: RswiftResources.FontResource { .init(name: "Mulish-Medium", bundle: bundle, filename: "Mulish-Medium.ttf") }

    /// Font `ProximaNova-Semibold`.
    var proximaNovaSemibold: RswiftResources.FontResource { .init(name: "ProximaNova-Semibold", bundle: bundle, filename: "proximanova_semibold.ttf") }

    /// Font `Roboto-Black`.
    var robotoBlack: RswiftResources.FontResource { .init(name: "Roboto-Black", bundle: bundle, filename: "Roboto-Black.ttf") }

    /// Font `Roboto-BlackItalic`.
    var robotoBlackItalic: RswiftResources.FontResource { .init(name: "Roboto-BlackItalic", bundle: bundle, filename: "Roboto-BlackItalic.ttf") }

    /// Font `Roboto-Bold`.
    var robotoBold: RswiftResources.FontResource { .init(name: "Roboto-Bold", bundle: bundle, filename: "Roboto-Bold.ttf") }

    /// Font `Roboto-BoldItalic`.
    var robotoBoldItalic: RswiftResources.FontResource { .init(name: "Roboto-BoldItalic", bundle: bundle, filename: "Roboto-BoldItalic.ttf") }

    /// Font `Roboto-Italic`.
    var robotoItalic: RswiftResources.FontResource { .init(name: "Roboto-Italic", bundle: bundle, filename: "Roboto-Italic.ttf") }

    /// Font `Roboto-Light`.
    var robotoLight: RswiftResources.FontResource { .init(name: "Roboto-Light", bundle: bundle, filename: "Roboto-Light.ttf") }

    /// Font `Roboto-LightItalic`.
    var robotoLightItalic: RswiftResources.FontResource { .init(name: "Roboto-LightItalic", bundle: bundle, filename: "Roboto-LightItalic.ttf") }

    /// Font `Roboto-Medium`.
    var robotoMedium: RswiftResources.FontResource { .init(name: "Roboto-Medium", bundle: bundle, filename: "Roboto-Medium.ttf") }

    /// Font `Roboto-MediumItalic`.
    var robotoMediumItalic: RswiftResources.FontResource { .init(name: "Roboto-MediumItalic", bundle: bundle, filename: "Roboto-MediumItalic.ttf") }

    /// Font `Roboto-Regular`.
    var robotoRegular: RswiftResources.FontResource { .init(name: "Roboto-Regular", bundle: bundle, filename: "Roboto-Regular.ttf") }

    /// Font `Roboto-Thin`.
    var robotoThin: RswiftResources.FontResource { .init(name: "Roboto-Thin", bundle: bundle, filename: "Roboto-Thin.ttf") }

    /// Font `Roboto-ThinItalic`.
    var robotoThinItalic: RswiftResources.FontResource { .init(name: "Roboto-ThinItalic", bundle: bundle, filename: "Roboto-ThinItalic.ttf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [comfortaaBold, comfortaaLight, comfortaaMedium, comfortaaRegular, comfortaaSemiBold, hammersmithOneRegular, mulishMedium, proximaNovaSemibold, robotoBlack, robotoBlackItalic, robotoBold, robotoBoldItalic, robotoItalic, robotoLight, robotoLightItalic, robotoMedium, robotoMediumItalic, robotoRegular, robotoThin, robotoThinItalic].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 22 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `GoogleService-Info-dev.plist`.
    var googleServiceInfoDevPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info-dev", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `GoogleService-Info-prod.plist`.
    var googleServiceInfoProdPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info-prod", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Mulish-Medium.ttf`.
    var mulishMediumTtf: RswiftResources.FileResource { .init(name: "Mulish-Medium", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Black.ttf`.
    var robotoBlackTtf: RswiftResources.FileResource { .init(name: "Roboto-Black", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-BlackItalic.ttf`.
    var robotoBlackItalicTtf: RswiftResources.FileResource { .init(name: "Roboto-BlackItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Bold.ttf`.
    var robotoBoldTtf: RswiftResources.FileResource { .init(name: "Roboto-Bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-BoldItalic.ttf`.
    var robotoBoldItalicTtf: RswiftResources.FileResource { .init(name: "Roboto-BoldItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Italic.ttf`.
    var robotoItalicTtf: RswiftResources.FileResource { .init(name: "Roboto-Italic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Light.ttf`.
    var robotoLightTtf: RswiftResources.FileResource { .init(name: "Roboto-Light", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-LightItalic.ttf`.
    var robotoLightItalicTtf: RswiftResources.FileResource { .init(name: "Roboto-LightItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Medium.ttf`.
    var robotoMediumTtf: RswiftResources.FileResource { .init(name: "Roboto-Medium", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-MediumItalic.ttf`.
    var robotoMediumItalicTtf: RswiftResources.FileResource { .init(name: "Roboto-MediumItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Regular.ttf`.
    var robotoRegularTtf: RswiftResources.FileResource { .init(name: "Roboto-Regular", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-Thin.ttf`.
    var robotoThinTtf: RswiftResources.FileResource { .init(name: "Roboto-Thin", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Roboto-ThinItalic.ttf`.
    var robotoThinItalicTtf: RswiftResources.FileResource { .init(name: "Roboto-ThinItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `comfortaa_bold.ttf`.
    var comfortaa_boldTtf: RswiftResources.FileResource { .init(name: "comfortaa_bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `comfortaa_light.ttf`.
    var comfortaa_lightTtf: RswiftResources.FileResource { .init(name: "comfortaa_light", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `comfortaa_medium.ttf`.
    var comfortaa_mediumTtf: RswiftResources.FileResource { .init(name: "comfortaa_medium", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `comfortaa_regular.ttf`.
    var comfortaa_regularTtf: RswiftResources.FileResource { .init(name: "comfortaa_regular", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `comfortaa_semi_bold.ttf`.
    var comfortaa_semi_boldTtf: RswiftResources.FileResource { .init(name: "comfortaa_semi_bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `hammersmithone_regular.ttf`.
    var hammersmithone_regularTtf: RswiftResources.FileResource { .init(name: "hammersmithone_regular", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `proximanova_semibold.ttf`.
    var proximanova_semiboldTtf: RswiftResources.FileResource { .init(name: "proximanova_semibold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 5 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `IntroCell`.
    var introCell: RswiftResources.NibReference<IntroCell> { .init(name: "IntroCell", bundle: bundle) }

    /// Nib `IntroVC`.
    var introVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "IntroVC", bundle: bundle) }

    /// Nib `LanguageCell`.
    var languageCell: RswiftResources.NibReference<LanguageCell> { .init(name: "LanguageCell", bundle: bundle) }

    /// Nib `LanguageVC`.
    var languageVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "LanguageVC", bundle: bundle) }

    /// Nib `SplashVC`.
    var splashVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SplashVC", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "ic_next", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic_next' is used in nib 'IntroVC', but couldn't be loaded.") }
      if UIKit.UIColor(named: "primary", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'primary' is used in nib 'IntroVC', but couldn't be loaded.") }
      if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "checkmark") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'checkmark' is used in nib 'LanguageCell', but couldn't be loaded.") } }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "ic_logo_splash", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic_logo_splash' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}